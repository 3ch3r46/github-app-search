import type { NextPage } from 'next'
import React, { useState, useEffect, useRef, createRef } from 'react'
import Head from 'next/head'
import Search from '../components/search'
import { useSearch } from '../libs/fetcher'
import UserCard from '../components/carduser'
import Link from 'next/link'
import { Grid, Column, Container, Main, Flex, Skeleton } from '../components/sharedstyled'
import Footer from '../components/footer'
import Navbar from '../components/navbar'
import styled from 'styled-components'
import { useAppContext } from '../libs/state'

const Title = styled.h1`
  margin: 0;
  margin-bottom: 1.5rem;
  line-height: 1.15;
  font-size: 4rem;
  -webkit-text-fill-color: transparent;
  color: transparent;
  -webkit-background-clip: text;
  background-clip: text;
  z-index: 1;
  background-image: linear-gradient(71.18deg, rgb(0, 34, 255) -27.32%, rgb(0, 34, 255) -16.39%, rgb(81, 121, 254) -7.38%, rgb(165, 237, 182) 30.59%, rgb(250, 232, 90) 46.06%, rgb(253, 172, 62) 62.61%, rgb(255, 92, 0) 75.82%);
`

const Home: NextPage = () => {
  const {search, setSearch, results, setResults} = useAppContext();
  const { data, isLoading, isError } = useSearch(search ?? null)
  
  useEffect(() => {
    if (data) {
      setResults(data.items);
    }
  }, [data, setResults]);

  return (
    <>
      <Head>
        <title>Github App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar/>
      <Container>
          <Main style={{display:'flex'}}>
            <Flex style={{width:'100%'}} direction='column' justify='center' alignItems='center'>
            <Title>
              GitHub App
            </Title>

            <Search handler={(target:any) => setSearch(target.value)} placeholder="Search users github here..." />

            { isLoading && <Skeleton style={{display:'block',width:'100%'}}>
                <div className='item' style={{width:'100%', height: '80px',display:'flex',alignItems:'center',justifyContent:'center'}}><h3>Loading...</h3></div>
              </Skeleton>}

            <Grid cols={1} md={2} gap={20}>
            { results && results.map((item:any) => {
              return <Column key={item.id}>
                <Link href={`/users/${item.login}`}>
                  <a>
                    <UserCard username={item.login} avatar={item.avatar_url}/>
                  </a>
                </Link>
              </Column>})}
            </Grid>
            </Flex>
          </Main>
      </Container>
      <Footer/>
    </>
  )
}

export default Home
